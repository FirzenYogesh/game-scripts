#! /bin/bash

DOCKER_COMMAND=""
CONFIG_DIRECTORY=.

showHelp() {
    echo "MongoDB - Batch Job your MongoDB Backups"
    echo ""
    echo "Usage: mongo-backup [<options>...]"
    echo ""
    echo "<options>"
    echo "      --docker-mode=<container>       -   Executes the mongodump in docker mode, value is the container name of the mongodb server. If not specified, script will assume the container as 'mongo'"
    echo "      --config-dir=</path/to/config>  -   Specify the config directory, if not specified the script will take the current directory where it is run"
    echo "  -h, --help                          -   Shows this help menu"
}

for i in "$@"; do
    case $1 in
    --docker-mode=*)
        container="${i#*=}"
        if [[ -z "${container}" ]]; then
            container="mongo"
        fi
        DOCKER_COMMAND="docker exec -i ${container} "
        shift # past argument=value
        ;;
    --config-dir=*)
        CONFIG_DIRECTORY="${i#*=}"
        shift
        ;;
    -h | --help)
        showHelp
        exit 0
        ;;
    esac
done

# Get current date
now="$(date +'%Y_%m_%d_%H_%M_%S')"

cd "${CONFIG_DIRECTORY}" || exit 1

for file in .*.db; do
    echo "backing up ${file}"

    # Load Config for the current database mongodb-backup
    source "${file}"

    backupDir="${MONGODB_BACKUP_FOLDER}"/"${MONGODB_HOST}"

    # Create the mongodb-backup folder
    mkdir -p "${backupDir}"

    # Execute the mongo dump
    if eval "${DOCKER_COMMAND}"mongodump --host="${MONGODB_HOST}" --port="${MONGODB_PORT}" --username="${MONGODB_USER}" --password="${MONGODB_PASSWORD}" --authenticationDatabase="${MONGODB_AUTHENTICATION_DATABASE}" >"${backupDir}"/"${MONGODB_BACKUP_FILE}"_"${now}".sql; then
        echo "backup complete for ${file}"
    fi

    # Delete Old Backups
    # MONGODB_BACKUP_RETENTION = value in days
    find "${backupDir}" -name "*.sql" -type f -mtime +"${MONGODB_BACKUP_RETENTION}" -delete
done
