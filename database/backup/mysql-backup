#! /bin/bash

DOCKER_COMMAND=""
CONFIG_DIRECTORY=.

showHelp() {
    echo "MySQL - Batch Job your MySQL Backups"
    echo ""
    echo "Usage: mysql-backup [<options>...]"
    echo ""
    echo "<options>"
    echo "      --docker-mode=<container>       -   Executes the mysqldump in docker mode, value is the container name of the mysql server. If not specified, script will assume the container as 'mysql'"
    echo "      --config-dir=</path/to/config>  -   Specify the config directory, if not specified the script will take the current directory where it is run"
    echo "  -h, --help                          -   Shows this help menu"
}

for i in "$@"; do
    case $1 in
    --docker-mode=*)
        container="${i#*=}"
        if [[ -z "${container}" ]]; then
            container="mysql"
        fi
        DOCKER_COMMAND="docker exec -i ${container} /usr/bin/"
        shift # past argument=value
        ;;
    --config-dir=*)
        CONFIG_DIRECTORY="${i#*=}"
        shift
        ;;
    -h | --help)
        showHelp
        exit 0
        ;;
    esac
done

# Get current date
now="$(date +'%Y_%m_%d_%H_%M_%S')"

cd "${CONFIG_DIRECTORY}" || exit 1

for file in .*.db; do
    echo "backing up ${file}"

    # Load Config for the current database mysql-backup
    source "${file}"

    backupDir="${MYSQL_BACKUP_FOLDER}"/"${MYSQL_HOST}"

    # Create the mysql-backup folder
    mkdir -p "${backupDir}"

    # Execute the mysql dump
    if eval "${DOCKER_COMMAND}"mysqldump --host "${MYSQL_HOST}" -P "${MYSQL_PORT}" -u "${MYSQL_USER}" -p"${MYSQL_PASSWORD}" -A -R -E --triggers --single-transaction >"${backupDir}"/"${MYSQL_BACKUP_FILE}"_"${now}".sql; then
        echo "backup complete for ${file}"
    fi

    # Delete Old Backups
    # MYSQL_BACKUP_RETENTION = value in days
    find "${backupDir}" -name "*.sql" -type f -mtime +"${MYSQL_BACKUP_RETENTION}" -delete
done
